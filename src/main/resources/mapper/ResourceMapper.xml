<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.user.mapper.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.hd.user.domain.Resource">
    <id column="resourceId" jdbcType="INTEGER" property="resourceid" />
    <result column="resourceName" jdbcType="VARCHAR" property="resourcename" />
    <result column="resourceUrl" jdbcType="VARCHAR" property="resourceurl" />
    <result column="resourceNote" jdbcType="VARCHAR" property="resourcenote" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="refreshTime" jdbcType="TIMESTAMP" property="refreshtime" />
  </resultMap>
  <sql id="Base_Column_List">
    resourceId, resourceName, resourceUrl, resourceNote, `state`, createTime, refreshTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource
    where resourceId = #{resourceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resource
    where resourceId = #{resourceid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="resourceId" keyProperty="resourceid" parameterType="com.hd.user.domain.Resource" useGeneratedKeys="true">
    insert into resource (resourceName, resourceUrl, resourceNote, 
      `state`, createTime, refreshTime
      )
    values (#{resourcename,jdbcType=VARCHAR}, #{resourceurl,jdbcType=VARCHAR}, #{resourcenote,jdbcType=VARCHAR}, 
      #{state,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, #{refreshtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="resourceId" keyProperty="resourceid" parameterType="com.hd.user.domain.Resource" useGeneratedKeys="true">
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resourcename != null">
        resourceName,
      </if>
      <if test="resourceurl != null">
        resourceUrl,
      </if>
      <if test="resourcenote != null">
        resourceNote,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="refreshtime != null">
        refreshTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resourcename != null">
        #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="resourceurl != null">
        #{resourceurl,jdbcType=VARCHAR},
      </if>
      <if test="resourcenote != null">
        #{resourcenote,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshtime != null">
        #{refreshtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hd.user.domain.Resource">
    update resource
    <set>
      <if test="resourcename != null">
        resourceName = #{resourcename,jdbcType=VARCHAR},
      </if>
      <if test="resourceurl != null">
        resourceUrl = #{resourceurl,jdbcType=VARCHAR},
      </if>
      <if test="resourcenote != null">
        resourceNote = #{resourcenote,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="refreshtime != null">
        refreshTime = #{refreshtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where resourceId = #{resourceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hd.user.domain.Resource">
    update resource
    set resourceName = #{resourcename,jdbcType=VARCHAR},
      resourceUrl = #{resourceurl,jdbcType=VARCHAR},
      resourceNote = #{resourcenote,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=CHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      refreshTime = #{refreshtime,jdbcType=TIMESTAMP}
    where resourceId = #{resourceid,jdbcType=INTEGER}
  </update>
</mapper>